#!/usr/bin/env perl

use Modern::Perl;
use REST::Google::Search qw/ LOCAL /;
use Crypt::SaltedHash;
use Try::Tiny;
use DateTime;

use lib 'lib';
use After5::Model;

our $MODEL = After5::Model->connect('dbi:SQLite:after5detroit.db');

use Mojolicious::Lite;
use Mojo::Util;

any '/' => sub {

    my $self = shift;
    return $self->redirect_to('home');
};

### After5 Pages

get '/home' => sub {

    my $self = shift;

    # Ads
    my @ads =
      $MODEL->resultset('Content')
      ->search({pages => {like => '%home%'}, types => {like => '%ad%'}})->all;

    $self->{'ADS'} = \@ads;

    # Features
    my @features =
      $MODEL->resultset('Content')
      ->search({pages => {like => '%home%'}, tags => {like => '%featured%'}},
        {order_by => 'id DESC'})->all;

    $self->{'FEATURES'} = \@features;

    # Features by Position
    my @positions =
      $MODEL->resultset('Content')->search({pages => {like => '%home%'}})
      ->all;

    $self->{'POSITIONS'} = \@positions;

    # City Life
    my @city_life =
      $MODEL->resultset('Content')
      ->search(
        {pages => {like => '%home%'}, interests => {like => '%living%'}},
        {order_by => 'id DESC'})->all;

    $self->{'CITY_LIFE'} = \@city_life;

    # Galleries
    my @galleries =
      $MODEL->resultset('Content')
      ->search({pages => {like => '%home%'}, types => {like => '%gallery%'}},
        {order_by => 'id DESC'})->all;

    $self->{'GALLERIES'} = \@galleries;

    return $self->render('home');

} => 'home';

get '/live' => sub {

    my $self = shift;

    # Ads
    my @ads =
      $MODEL->resultset('Content')
      ->search({pages => {like => '%live%'}, types => {like => '%ad%'}})->all;

    $self->{'ADS'} = \@ads;

    # City Life
    my @city_life = $MODEL->resultset('Content')->search(
        {pages     => {like => '%live%'}},
        {interests => {like => '%living%'}},
        {order_by  => 'id DESC'}
    )->all;

    $self->{'CITY_LIFE'} = \@city_life;

    # Lifestyle
    my @lifestyle = $MODEL->resultset('Content')->search(
        {pages    => {like => '%live%'}},
        {types    => {like => '%place%'}},
        {order_by => 'id DESC'}
    )->all;

    $self->{'LIFESTYLE'} = \@lifestyle;

    return $self->render('live');

} => 'live';

get '/work' => sub {

    my $self = shift;

    # Ads
    my @ads =
      $MODEL->resultset('Content')
      ->search({pages => {like => '%work%'}, types => {like => '%ad%'}})->all;

    $self->{'ADS'} = \@ads;

    return $self->render('work');

} => 'work';

get '/play' => sub {

    my $self = shift;

    # Ads
    my @ads =
      $MODEL->resultset('Content')
      ->search({pages => {like => '%play%'}, types => {like => '%ad%'}})->all;

    $self->{'ADS'} = \@ads;

    # Features
    my @features = $MODEL->resultset('Content')->search(
        {pages    => {like => '%play%'}},
        {types    => {like => '%people%'}},
        {tags     => {like => '%featured%'}},
        {order_by => 'id DESC'}
    )->all;

    $self->{'FEATURES'} = \@features;

    # Buzz
    my @buzz = $MODEL->resultset('Content')->search(
        {pages    => {like => '%play%'}},
        {tags     => {like => '%the_buzz%'}},
        {order_by => 'id DESC'}
    )->all;

    $self->{'BUZZ'} = \@buzz;

    # Places
    my @places = $MODEL->resultset('Content')->search(
        {pages    => {like => '%play%'}},
        {types    => {like => '%place%'}},
        {tags     => {like => '%try_this%'}},
        {order_by => 'id DESC'}
    )->all;

    $self->{'PLACES'} = \@places;

    return $self->render('play');

} => 'play';

get '/photos' => sub {

    my $self = shift;

    # Ads
    my @ads =
      $MODEL->resultset('Content')
      ->search({pages => {like => '%photos%'}, types => {like => '%ad%'}},
        {order_by => 'id DESC'})->all;

    $self->{'ADS'} = \@ads;

    # Galleries
    my @galleries =
      $MODEL->resultset('Content')
      ->search({pages => {like => '%photos%'}}, {order_by => 'id DESC'})->all;

    $self->{'GALLERIES'} = \@galleries;

    return $self->render('photos');

} => 'photos';

get '/about' => sub {

    my $self = shift;

    # Ads
    my @ads =
      $MODEL->resultset('Content')
      ->search({pages => {like => '%about%'}, types => {like => '%ad%'}},
        {order_by => 'id DESC'})->all;

    $self->{'ADS'} = \@ads;

    return $self->render('about');

} => 'about';

get '/:page/:item' => [page => qr/\w+/, item => qr/\w+/] => sub {

    my $self = shift;

    my $page = $self->param('page');

    # Ads
    my @ads =
      $MODEL->resultset('Content')
      ->search({pages => {like => '%$page%'}, types => {like => '%ad%'}},
        {order_by => 'id DESC'})->all;

    $self->{'ADS'} = \@ads;

    my $page_item = $self->param('page') . '_' . $self->param('item');

    return $self->render($page_item);

} => 'page_item';

any '/search' => sub {

    my $self = shift;
    $self->{'MODEL'} = $MODEL;

    # Ad Content
    $self->{'ad_content'} = 'search';

    return $self->render('search');

} => 'search';

any '/more' => sub {

    my $self = shift;

    my (@ads, @more);

    # Ads
    @ads =
      $MODEL->resultset('Content')
      ->search({pages => {like => '%more%'}, types => {like => '%ad%'}},
        {order_by => 'id DESC'})->all;

    $self->{'ADS'} = \@ads;

    if ($self->param('id')) {

        @more =
          $MODEL->resultset('Content')->search({id => $self->param('id')});
        $self->{'MORE'} = \@more;
    }

    if ($self->param('featured')) {

        @more =
          $MODEL->resultset('Content')
          ->search({tags => {like => '%featured%'}}, {order_by => 'id DESC'})
          ->all;
        $self->{'MORE'} = \@more;
    }

    if ($self->param('living')) {

        @more =
          $MODEL->resultset('Content')
          ->search({interests => {like => '%living%'}},
            {order_by => 'id DESC'})->all;
        $self->{'MORE'} = \@more;
    }

    if ($self->param('galleries')) {

        @more =
          $MODEL->resultset('Content')
          ->search({types => {like => '%gallery%'}}, {order_by => 'id DESC'})
          ->all;
        $self->{'MORE'} = \@more;
    }

    return $self->render('more');

} => 'more';

### After5 Control Panel

get '/cpanel' => sub {

    my $self = shift;
    $self->{'MODEL'} = $MODEL;

    # Ad Content
    $self->{'ad_content'} = '';    # Setting this blank...

    return $self->render('cpanel');

} => 'cpanel';

## CPanel: Content

any '/cpanel/content/form' => sub {

    my $self = shift;
    $self->{'MODEL'} = $MODEL;

    return $self->redirect_to('cpanel') unless $self->session('admin');

    return $self->render('cpanel_content_form');

} => 'cpanel_content_form';

any '/cpanel/content/create' => sub {

    my $self = shift;

    return $self->redirect_to('cpanel') unless $self->session('admin');

    my (@tags, @cities, @types, @interests, @pages, @photos);

    try {

        my $new_content = $MODEL->resultset('Content')->create(

            {   author   => $self->param('author'),
                title    => $self->param('title'),
                datetime => DateTime->now,
            }
        );

        if ($self->param('body')) {

            $MODEL->resultset('Content')->search({id => $new_content->id})
              ->update({body => $self->param('body')});
        }

        if ($self->param('interests')) {

            push @interests, $_ for $self->param('interests');

            $MODEL->resultset('Content')->search({id => $new_content->id})
              ->update({interests => "@interests"});
        }

        if ($self->param('pages')) {

            push @pages, $_ for $self->param('pages');

            $MODEL->resultset('Content')->search({id => $new_content->id})
              ->update({pages => "@pages"});
        }

        if ($self->param('types')) {

            push @types, $_ for $self->param('types');

            $MODEL->resultset('Content')->search({id => $new_content->id})
              ->update({types => "@types"});
        }

        if ($self->param('tags')) {

            push @tags, $_ for $self->param('tags');

            $MODEL->resultset('Content')->search({id => $new_content->id})
              ->update({tags => "@tags"});
        }

        if ($self->param('cities')) {

            push @cities, $_ for $self->param('cities');

            $MODEL->resultset('Content')->search({id => $new_content->id})
              ->update({cities => "@cities"});
        }

        if ($self->param('position')) {

            $MODEL->resultset('Content')->search({id => $new_content->id})
              ->update({position => $self->param('position')});
        }

        push @photos, process_photo($self->req->upload('photo1'))
          if $self->req->upload('photo1');

        push @photos, process_photo($self->req->upload('photo2'))
          if $self->req->upload('photo2');

        push @photos, process_photo($self->req->upload('photo3'))
          if $self->req->upload('photo3');

        push @photos, process_photo($self->req->upload('photo4'))
          if $self->req->upload('photo4');

        $MODEL->resultset('Content')->search({id => $new_content->id})
          ->update({photos => "@photos", datetime => DateTime->now})
          if scalar @photos >= 1;

    }

    finally {

        $self->redirect_to('cpanel');
    }

};

any '/cpanel/content/update' => sub {

    my $self = shift;

    return $self->redirect_to('cpanel') unless $self->session('admin');

    my (@tags, @cities, @types, @interests, @pages, @photos);

    if ($self->param('author')) {

        $MODEL->resultset('Content')->search({id => $self->param('id')})
          ->update({author => $self->param('author')});
    }

    if ($self->param('title')) {

        $MODEL->resultset('Content')->search({id => $self->param('id')})
          ->update({title => $self->param('title')});
    }

    if ($self->param('body')) {

        $MODEL->resultset('Content')->search({id => $self->param('id')})
          ->update({body => $self->param('body')});
    }

    if ($self->param('interests')) {

        push @interests, $_ for $self->param('interests');

        $MODEL->resultset('Content')->search({id => $self->param('id')})
          ->update({interests => "@interests"});
    }

    if ($self->param('pages')) {

        push @pages, $_ for $self->param('pages');

        $MODEL->resultset('Content')->search({id => $self->param('id')})
          ->update({pages => "@pages"});
    }

    if ($self->param('types')) {

        push @types, $_ for $self->param('types');

        $MODEL->resultset('Content')->search({id => $self->param('id')})
          ->update({types => "@types"});
    }

    if ($self->param('tags')) {

        push @tags, $_ for $self->param('tags');

        $MODEL->resultset('Content')->search({id => $self->param('id')})
          ->update({tags => "@tags"});
    }

    if ($self->param('cities')) {

        push @cities, $_ for $self->param('cities');

        $MODEL->resultset('Content')->search({id => $self->param('id')})
          ->update({cities => "@cities"});
    }

    if ($self->param('position')) {

        $MODEL->resultset('Content')->search({id => $self->param('id')})
          ->update({position => $self->param('position')});
    }

    push @photos, process_photo($self->req->upload('photo1'))
      if $self->req->upload('photo1');

    push @photos, process_photo($self->req->upload('photo2'))
      if $self->req->upload('photo2');

    push @photos, process_photo($self->req->upload('photo3'))
      if $self->req->upload('photo3');

    push @photos, process_photo($self->req->upload('photo4'))
      if $self->req->upload('photo4');

    $MODEL->resultset('Content')->search({id => $self->param('id')})
      ->update({photos => "@photos", datetime => DateTime->now})
      if scalar @photos >= 1;

    try {

#
# 	if($self->param('address')) {
#
# 	    my @results = google_local($self->param('address'));
#
# 	    for (@results) {
#
# 		$MODEL->resultset('Content')->search({id => $self->param('id')})
# 		->update(
#
# 		    {   address => $self->param('address'),
# 			lat => $_->lat,
# 			lng => $_->lng,
# 			datetime => DateTime->now,
# 		    }
# 		);
# 	    }
# 	}

      }

      finally {

        $self->redirect_to('cpanel');
    }

};

any '/cpanel/content/remove' => sub {

    my $self = shift;

    return $self->redirect_to('cpanel') unless $self->session('admin');

    try {

        $MODEL->resultset('Content')->search({id => $self->param('id')})
          ->delete;
    }

    finally {

        $self->redirect_to('cpanel');
    }

};

## CPanel: After5 Admin

any '/cpanel/login' => sub {

    my $self = shift;

    try {

        my @settings =
          $MODEL->resultset('Settings')
          ->search({admin => $self->param('admin')});

        for (@settings) {

            if (Crypt::SaltedHash->validate(
                    $_->password, $self->param('password')
                )
              )
            {

                $self->session(admin => $_->admin);
                $self->redirect_to('cpanel');
            }
        }
    }

    finally {

        $self->redirect_to('cpanel');
    }

} => 'cpanel_login';

get '/cpanel/logout' => sub {

    my $self = shift;

    $self->session(expires => 1)
      and return $self->redirect_to('home');

} => 'cpanel_logout';

any '/cpanel/settings' => sub {

    my $self = shift;

    return $self->redirect_to('cpanel') unless $self->session('admin');

    try {

        $MODEL->resultset('Settings')
          ->update({admin => $self->param('admin')});

        if (    ($self->param('password_1') ne '')
            and ($self->param('password_1') eq $self->param('password_2')))
        {

            my $crypt = Crypt::SaltedHash->new(algorithm => 'SHA-256');
            $crypt->add($self->param('password_1'));

            my $password = $crypt->generate;

            $MODEL->resultset('Settings')->update({password => $password});
        }

        $MODEL->resultset('Settings')
          ->update({about => $self->param('about')});
    }

    finally {

        $self->redirect_to('cpanel');
    }

} => 'cpanel_settings';

### After5 Tools

sub process_photo {

    my $upload = shift;

    my $path = '/photos/' . $upload->filename;

    $upload->move_to('public' . $path);

    return $path;
}

sub google_local {

    REST::Google::Search->service(LOCAL);

    my $response = REST::Google::Search->new(q => shift);

    if ($response->responseStatus == 200) {

        my $data = $response->responseData;
        return $data->results;
    }

}

sub randomize_content {

    my @array = shift;
    my $i     = $#array;
    my $j;

    for my $item (@array) {

        --$i;
        $j = int rand($i + 1);
        next if $i == $j;
        @array[$i, $j] = @array[$j, $i];
    }
    return \@array;

}


app->secret('after5detroit.com');
app->start;
