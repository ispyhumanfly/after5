#!/usr/bin/env perl

use Modern::Perl;
use Mojolicious::Lite;
use Crypt::SaltedHash;
use Try::Tiny;
use DateTime;

use lib 'lib';
use After5::Model;

our $MODEL = After5::Model->connect('dbi:SQLite:after5detroit.db');

any '/' => sub {

    my $self = shift;
    return $self->redirect_to('home');

};

### After5 Pages

get '/home' => sub {

    my $self = shift;
    $self->{'MODEL'} = $MODEL;

    return $self->render('home');

} => 'home';

get '/live' => sub {

    my $self = shift;
    $self->{'MODEL'} = $MODEL;

    return $self->render('live');

} => 'live';

get '/work' => sub {

    my $self = shift;
    $self->{'MODEL'} = $MODEL;

    return $self->render('work');

} => 'work';

get '/play' => sub {

    my $self = shift;
    $self->{'MODEL'} = $MODEL;

    return $self->render('play');

} => 'play';

get '/photos' => sub {

    my $self = shift;
    $self->{'MODEL'} = $MODEL;

    return $self->render('photos');

} => 'photos';

### After5 Functions

any '/search' => sub {

    my $self = shift;
    $self->{'MODEL'} = $MODEL;

    return $self->render('search');

} => 'search';

any '/more' => sub {

    my $self = shift;
    $self->{'MODEL'} = $MODEL;

    return $self->render('more');

} => 'more';


### After5 Control Panel

get '/cpanel' => sub {

    my $self = shift;
    $self->{'MODEL'} = $MODEL;

    return $self->render('cpanel');

} => 'cpanel';

any '/cpanel/settings' => sub {

    my $self = shift;

    try {

        $MODEL->resultset('Settings')
          ->update({admin => $self->param('admin')});

        if (    ($self->param('password_1') ne '')
            and ($self->param('password_1') eq $self->param('password_2')))
        {

            my $crypt = Crypt::SaltedHash->new(algorithm => 'SHA-256');
            $crypt->add($self->param('password_1'));

            my $password = $crypt->generate;

            $MODEL->resultset('Settings')->update({password => $password});
        }

        $MODEL->resultset('Settings')
          ->update({about => $self->param('about')});
    }

    finally {

        $self->redirect_to('cpanel');
    }

} => 'cpanel_settings';

any '/cpanel/content' => sub {

    my $self = shift;

    try {

        $MODEL->resultset('Content')->create(

            {   type     => $self->param('type'),
                tags     => $self->param('tags'),
                cities   => $self->param('cities'),
                title    => $self->param('title'),
                body     => $self->param('body'),
                datetime => DateTime->now,
            }
        );
    }

    finally {

        $self->redirect_to('cpanel');
    }

} => 'cpanel_content';

any '/cpanel/content/remove' => sub {

    my $self = shift;

    try {

        $MODEL->resultset('Content')->delete({ id => "$self->param('id')" });

    }

    finally {

        $self->redirect_to('cpanel');
    }

};

any '/cpanel/ads' => sub {

    my $self = shift;
    return $self->redirect_to('cpanel');

} => 'cpanel_ads';

any '/cpanel/login' => sub {

    my $self = shift;

    try {

        my @settings =
          $MODEL->resultset('Settings')
          ->search({admin => $self->param('admin')});

        for (@settings) {

            if (Crypt::SaltedHash->validate(
                    $_->password, $self->param('password')
                )
              )
            {

                $self->session(admin => $_->admin);
                $self->redirect_to('cpanel');
            }
        }
    }

    finally {

        $self->redirect_to('cpanel');
    }

} => 'cpanel_login';

any '/cpanel/logout' => sub {

    my $self = shift;

    $self->session(expires => 1)
      and return $self->redirect_to('home');

} => 'cpanel_logout';

app->secret('after5detroit.com');
app->start;
